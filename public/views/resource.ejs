<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Resources</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            background: url('/images/pattern.png') no-repeat center center fixed;
            background-size: cover;
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding-top: 70px;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            min-height: 100vh;
        }

        .form-container {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            padding: 20px;
            width: 100%;
            max-width: 800px;
            margin-top: 20px;
        }

        h1 {
            text-align: center;
            color: rgb(75, 72, 72);
        }

        .stage {
            margin-bottom: 20px;
            padding: 10px;
            border: 1px solid rgb(75, 72, 72);
            border-radius: 4px;
            background-color: #fafafa;
        }

        input[type="text"],
        input[type="number"] {
            width: calc(100% - 20px);
            padding: 8px;
            margin: 5px 0;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        button {
            background-color: rgb(245, 190, 9);
            color: rgb(75, 72, 72);
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin: 10px 0;
        }

        button:hover {
            background-color: rgb(200, 160, 7);
        }

        #totalAmount,
        .stageTotal {
            font-weight: bold;
            margin-top: 10px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }

        th,
        td {
            border: 1px solid rgb(75, 72, 72);
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: rgb(245, 190, 9);
            color: white;
        }

        .actions button {
            background-color: rgb(245, 190, 9);
            color: rgb(75, 72, 72);
            padding: 5px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin: 2px;
        }

        .actions button:hover {
            background-color: rgb(200, 160, 7);
        }
    </style>
</head>

<body>
    <div class="form-container">
        <h1>Resources for <%= project.name %></h1>

        <form id="resourceForm" action="/add_resource" method="POST">
            <input type="hidden" name="projectId" value="<%= project.id %>">
            <input type="hidden" id="stageCount" name="stageCount" value="<%= stages.length %>">

            <div id="stagesContainer">
                <% stages.forEach((stage, index) => { %>
                    <div class="stage" id="stage-<%= stage.stage %>">
                        <h3>
                            <% stageDetails.forEach((stageDetail) => { %>
                                <% if (stage.stage == stageDetail.stage) { %>
                                    Stage <%= stageDetail.stage %>: <%= stageDetail.name %>
                                <% } %>
                            <% }); %>
                        </h3>

                        <table id="resourceTable-<%= stage.stage %>">
                            <thead>
                                <tr>
                                    <th>S.No</th>
                                    <th>Resource</th>
                                    <th>Quantity</th>
                                    <th>Amount</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% stage.resources.forEach((resource, rIndex) => { %>
                                    <tr>
                                        <td><%= rIndex + 1 %></td>
                                        <td><input type="text" name="resourceType-<%= stage.stage %>[]"
                                                value="<%= resource.resourceType %>"></td>
                                        <td><input type="text" name="quantity-<%= stage.stage %>[]"
                                                value="<%= resource.quantity %>"></td>
                                        <td><input type="number" name="amount-<%= stage.stage %>[]"
                                                value="<%= resource.amount %>" min="0" step="any"></td>
                                        <td class="actions">
                                            <button type="button" onclick="addRow(<%= stage.stage %>)"><i class="fas fa-plus"></i> Add</button>
                                            <button type="button" onclick="editRow(this)"><i class="fas fa-edit"></i> Edit</button>
                                            <button type="button" onclick="deleteRow(this)"><i class="fas fa-trash"></i> Delete</button>
                                        </td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                        <div class="stageTotal" id="stageTotal-<%= stage.stage %>">
                            <strong>Stage <%= stage.stage %> Total:</strong> 0
                        </div>
                        <button type="button" onclick="deleteStage(<%= stage.stage %>)">Delete Stage</button>
                    </div>
                <% }); %>
            </div>

            <!-- Single Add Stage button -->
            <button type="button" onclick="addStage()">Add Stage</button>

            <div class="calculate-buttons">
                <button type="button" onclick="calculateTotal()">Calculate Total</button>
                <button type="button" onclick="calculateStageTotals()">Calculate Stage Totals</button>
            </div>

            <div id="totalAmount"></div>
            <button type="submit">Submit Resources</button>
        </form>
    </div>

    <script>
        let stageCount = <%= stages.length %>;  // Initialize stage count based on existing stages

        function addStage() {
            stageCount++;
            document.getElementById('stageCount').value = stageCount;
            const stagesContainer = document.getElementById('stagesContainer');
            const stageDiv = document.createElement('div');
            stageDiv.classList.add('stage');
            stageDiv.setAttribute('id', `stage-${stageCount}`); // Set unique id for the new stage
            stageDiv.innerHTML = `
                <h3>Stage ${stageCount}</h3>
                <table id="resourceTable-${stageCount}">
                    <thead>
                        <tr>
                            <th>S.No</th>
                            <th>Resource</th>
                            <th>Quantity</th>
                            <th>Amount</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>1</td>
                            <td><input type="text" name="resourceType-${stageCount}[]" placeholder="Enter resource"></td>
                            <td><input type="text" name="quantity-${stageCount}[]" placeholder="Enter quantity"></td>
                            <td><input type="number" name="amount-${stageCount}[]" placeholder="Enter amount" min="0" step="any"></td>
                            <td class="actions">
                                <button type="button" onclick="addRow(${stageCount})"><i class="fas fa-plus"></i> Add</button>
                                <button type="button" onclick="editRow(this)"><i class="fas fa-edit"></i> Edit</button>
                                <button type="button" onclick="deleteRow(this)"><i class="fas fa-trash"></i> Delete</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="stageTotal" id="stageTotal-${stageCount}"><strong>Stage ${stageCount} Total:</strong> 0</div>
                <button type="button" onclick="deleteStage(${stageCount})">Delete Stage</button>
            `;
            stagesContainer.appendChild(stageDiv);
        }

        function deleteStage(stageNumber) {
    const stageDiv = document.getElementById(`stage-${stageNumber}`);
    if (stageDiv) {
        // Ask for confirmation before deletion
        const confirmation = confirm("Are you sure you want to delete this stage?");
        if (confirmation) {
            // Proceed with deletion
            fetch(`/delete_stage/${stageNumber}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ projectId: document.querySelector('input[name="projectId"]').value })
            })
            .then(response => {
                if (response.ok) {
                    stageDiv.remove(); // Remove the stage from the DOM
                    stageCount--; // Decrease stage count
                    document.getElementById('stageCount').value = stageCount; // Update stage count input
                    calculateStageTotals(); // Recalculate totals after deletion
                    calculateTotal(); // Recalculate overall total after deletion
                } else {
                    alert("Error deleting stage. Please try again.");
                }
            })
            .catch(err => {
                console.error("Error:", err);
                alert("Error deleting stage. Please try again.");
            });
        }
    }
}


        function addRow(stageNumber) {
            const tableBody = document.querySelector(`#resourceTable-${stageNumber} tbody`);
            const rowCount = tableBody.rows.length + 1;
            const newRow = document.createElement('tr');
            newRow.innerHTML = `
                <td>${rowCount}</td>
                <td><input type="text" name="resourceType-${stageNumber}[]" placeholder="Enter resource type"></td>
                <td><input type="text" name="quantity-${stageNumber}[]" placeholder="Enter quantity"></td>
                <td><input type="number" name="amount-${stageNumber}[]" placeholder="Enter amount" min="0" step="any"></td>
                <td class="actions">
                    <button type="button" onclick="addRow(${stageNumber})"><i class="fas fa-plus"></i> Add</button>
                    <button type="button" onclick="editRow(this)"><i class="fas fa-edit"></i> Edit</button>
                    <button type="button" onclick="deleteRow(this)"><i class="fas fa-trash"></i> Delete</button>
                </td>
            `;
            tableBody.appendChild(newRow);
        }

        function editRow(button) {
            const row = button.closest('tr');
            const inputs = row.querySelectorAll('input');
            inputs.forEach(input => {
                input.disabled = !input.disabled; // Toggle edit mode
            });
            button.innerHTML = button.innerHTML.includes('Edit') ? '<i class="fas fa-save"></i> Save' : '<i class="fas fa-edit"></i> Edit';
        }

        function deleteRow(button) {
            const row = button.closest('tr');
            row.remove();
        }

        function calculateTotal() {
            const totalAmountPerStage = {};
            for (let i = 1; i <= stageCount; i++) {
                let stageTotalAmount = 0;
                const amountInputs = document.querySelectorAll(`#resourceTable-${i} tbody input[type="number"]`);
                amountInputs.forEach(input => {
                    const amount = parseFloat(input.value) || 0;
                    stageTotalAmount += amount;
                });
                totalAmountPerStage[`Stage ${i}`] = stageTotalAmount;
            }

            let totalAmount = 0;
            for (const [stage, amount] of Object.entries(totalAmountPerStage)) {
                totalAmount += amount;
            }

            document.getElementById('totalAmount').innerHTML = `<strong>Total Amount:</strong> ${totalAmount.toFixed(2)}`;
        }

        function calculateStageTotals() {
            for (let i = 1; i <= stageCount; i++) {
                let stageTotalAmount = 0;
                const amountInputs = document.querySelectorAll(`#resourceTable-${i} tbody input[type="number"]`);
                amountInputs.forEach(input => {
                    const amount = parseFloat(input.value) || 0;
                    stageTotalAmount += amount;
                });
                document.getElementById(`stageTotal-${i}`).innerHTML = `<strong>Stage ${i} Total:</strong> ${stageTotalAmount.toFixed(2)}`;
            }
        }

        // Initialize with one stage
        addStage();
    </script>
</body>

</html>